{"version":3,"sources":["Container/Theming.js","Redux/Constant.js","Redux/Reducer/generic.js","Redux/Reducer/allReducer.js","Redux/Store/index.js","Redux/Actions/genericActions.js","Fixtures/generic-fixture.js","Component/TemporaryDrawer.js","Component/TopNavBar.js","Container/Home/Home.js","Component/Select/CustomDropdown.js","Component/CreateTicketForm/CreateTicket.js","Component/DataGridview/DataGridview.js","Container/TicketDashboard/TicketDashboard.js","Container/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Theme","createTheme","palette","primary","main","neutral","contrastText","secondary","light","contrastThreshold","tonalOffset","Constant","sideNavToggle","state","action","type","allReducer","combineReducers","navToggle","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","toggleNav","SideNavMenuItems","title","icon","subtile","link","redirect","TemporaryDrawer","useSelector","dispatch","useDispatch","anchor","Drawer","open","classes","width","height","Button","variant","onClick","sx","color","Box","role","List","map","item","index","ListItem","button","ListItemText","to","Divider","list","TopNavBar","bgcolor","Toolbar","IconButton","size","edge","mr","Typography","component","flexGrow","style","textDecoration","Home","CustomDropdown","id","field","option","control","Autocomplete","className","options","autoHighlight","onChange","event","value","label","getOptionLabel","renderOption","props","renderInput","params","TextField","inputProps","ticketowner","pipeline","ticket","priority","Label","name","important","FormLabel","CreateTicket","setTicketFormData","React","useState","left","setState","toggleDrawer","key","Fab","onClose","TicketForm","useForm","register","handleSubmit","watch","Date","setValue","onSubmit","data","_final_data","uuidv4","render","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","DesktopDatePicker","inputFormat","newValue","direction","columns","headerName","editable","DataGridview","rowData","rows","TicketDashboard","ticketsArray","setTicketsArray","console","log","SwitchRouter","exact","path","element","Dashboard","App","ThemeProvider","theme","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4bac1c3.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\nexport const Theme = createTheme({\n\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#a9bcef',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    neutral: {\n      main: '#64748B',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#7a97e5',\n      main: '#4f76e1',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#ffcc00',\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});\n","\nexport const Constant = {\n    TOGGLE_NAV : \"Toggle Nav\"\n}","import { Constant } from \"../Constant\";\n\n const sideNavToggle = (state = false, action) => {\n  switch (action.type) {\n    case Constant.TOGGLE_NAV:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default sideNavToggle;","import { combineReducers } from \"redux\";\nimport sideNavToggle from '../Reducer/generic';\n\n\nexport const allReducer = combineReducers({\n    navToggle:sideNavToggle\n})\n","import { createStore } from \"redux\";\nimport { allReducer } from \"../Reducer/allReducer\";\n\nexport const store = createStore(allReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import { Constant } from \"../Constant\";\n\nexport const toggleNav = () => {\n  return {\n    type: Constant.TOGGLE_NAV\n  };\n};\n","export const SideNavMenuItems = [\n  {\n    title: \"Ticket\",\n    icon: \"TicketIcon\",\n    subtile: \"Ticket details\",\n    link: \"Create ticket and details\",\n    redirect:\"/tickets\"\n  },\n  {\n    title: \"Item1\",\n    icon: \"Home\",\n    subtile: \"temp1\",\n    link: \"Some discription\",\n  },\n  {\n    title: \"Item1\",\n    icon: \"Home\",\n    subtile: \"temp1\",\n    link: \"Some discription\",\n  }\n];\n\n\nexport const ModalFixture = {\n    title: \"Do you want to continue\",\n    subtitle: \"Save before doing so\",\n  };\n\n\n  export const LoadModalFixture = {\n    title: \"Want to watch Netflix\",\n    subtitle: \"Want to chill\",\n  }; ","import {useState} from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport {ListItem,ListItemText,ListItemIcon} from '@mui/material';\nimport {InboxIcon,HomeIcon} from '@mui/icons-material/MoveToInbox';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {toggleNav} from '../Redux/Actions/genericActions';\nimport Icon from '@mui/material/Icon';\nimport {SideNavMenuItems} from '../Fixtures/generic-fixture';\nimport { Link } from \"react-router-dom\";\nexport default function TemporaryDrawer() {\nconst sideNavToggle = useSelector(state => state.navToggle);\nconst dispatch = useDispatch();\n\n\n const anchor =\"left\";\n\n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n    >\n      <List>\n        {SideNavMenuItems.map((item, index) => (\n          <ListItem button key={item.title}>\n            <ListItemText primary={item.subtile} />\n            <Link onClick={()=>dispatch(toggleNav())} to={`${item.redirect}`}>{item.title}</Link>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </Box>\n  );\n\n  return (\n    <div>\n        <>\n          <Drawer\n            anchor={anchor}\n            open={sideNavToggle}\n            classes={{\n              width: 100,\n              height: 300\n            }}\n          >\n            <Button variant=\"contained\" aria-label=\"outlined primary button group\"\n             onClick={()=>dispatch(toggleNav())} sx={{color:\"primary.dark\"}}>\n              <CloseIcon/>\n            </Button>\n            {list(anchor)}\n          </Drawer>\n        </>\n    </div>\n  );\n}\n","import { Button, Box, Toolbar, IconButton, Typography } from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleNav } from \"../Redux/Actions/genericActions\";\nimport { Link } from \"react-router-dom\";\n\nconst TopNavBar = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box sx={{ bgcolor: \"secondary.dark\" }}>\n      <Toolbar>\n        <IconButton\n          size=\"large\"\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          sx={{ mr: 2 }}\n          onClick={() => dispatch(toggleNav())}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          <Link style={{ textDecoration: 'none' }} to=\"/\">Manage</Link>\n        </Typography>\n      </Toolbar>\n    </Box>\n  );\n};\n\nexport default TopNavBar;\n","import React from \"react\";\n\nexport const Home = () => {\n  return (\n    <div>\n      <h3>Home Page</h3>\n      <p>\n        I am crazy about hats these days. Some text about this blog entry.\n        Fashion fashion and mauris neque quam, fermentum ut nisl vitae,\n        convallis maximus nisl. Sed mattis nunc id lorem euismod placerat.\n        Vivamus porttitor magna enim, ac accumsan tortor cursus at. Phasellus\n        sed ultricies mi non congue ullam corper. Praesent tincidunt sedtellus\n        ut rutrum. Sed vitae justo condimentum, porta lectus vitae, ultricies\n        congue gravida diam non fringilla.\n      </p>\n      <p>\n        Sunt in culpa qui officia deserunt mollit anim id est laborum\n        consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n        et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n        exercitation ullamco.\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport CoffeeIcon from \"@mui/icons-material/Coffee\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nconst optionss = [\n  { icon: <HomeIcon />, label: \"Home\" },\n  { icon: <CoffeeIcon />, label: \"Cofee\" },\n  { icon: <CheckIcon />, label: \"CheckSquare\" },\n];\n\nexport const CustomDropdown = ({ id,field, option,control}) => {\n  return (\n   \n    <Autocomplete\n      id={id}\n      className=\"dropdown\"\n      options={option}\n      autoHighlight\n      onChange={(event,value)=>field.onChange(value.label)}\n      getOptionLabel={(option) => option.label}\n      renderOption={(props, option) => (\n        <Box component=\"li\" {...props}>\n          {option.icon} {option.label} {option.style}\n        </Box>\n      )}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          inputProps={{\n            ...params.inputProps,\n          }}\n        />\n      )}\n    />\n  ) \n};\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Stack from \"@mui/material/Stack\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport \"./style.scss\";\nimport { CustomDropdown } from \"../Select/CustomDropdown\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Fab, Select } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ticketowner = [{ label: \"Riya\" }];\nconst pipeline = [\n  { label: \"support pipeline\" },\n  { label: \"add another pipeline\" },\n];\nconst source = [\n  { label: \"chat\" },\n  { label: \"form\" },\n  { label: \"email\" },\n  { label: \"phone\" },\n];\nconst ticket = [\n  { label: \"New\" },\n  { label: \"waiting on contact\" },\n  { label: \"waiting on us\" },\n  { label: \"closed\" },\n];\nconst priority = [{ label: \" Low\" }, { label: \"Medium\" }, { label: \"High\" }];\n\nconst Label = ({ name, important }) => (\n  <FormLabel component=\"legend\">\n    {name} {important ? <>*</> : <></>}\n  </FormLabel>\n);\n\nexport const CreateTicket = ({ setTicketFormData }) => {\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const anchor = \"right\";\n\n  return (\n    <div key={anchor}>\n      <Fab\n      className=\"create-ticket-btn\"\n        color=\"secondary\"\n        aria-label=\"add\"\n        onClick={toggleDrawer(anchor, true)}\n      >\n        <AddIcon />\n      </Fab>\n\n      <Drawer\n        anchor={anchor}\n        open={state[anchor]}\n        onClose={toggleDrawer(anchor, false)}\n      >\n        <TicketForm setTicketFormData={setTicketFormData} />\n      </Drawer>\n    </div>\n  );\n};\n\nconst TicketForm = ({ setTicketFormData }) => {\n  const setTicketForm = (data) => {\n    let _final_data={id:uuidv4(),...data}\n    setTicketFormData(_final_data);\n  };\n\n  const { control, register, handleSubmit, watch } = useForm({});\n  const [value, setValue] = React.useState(new Date(\"2014-08-18T21:11:54\"));\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(setTicketForm)}>\n      <Label name=\"Ticket name\" />\n      <TextField\n        id=\"ticketName\"\n        {...register(\"ticketName\")}\n        className=\"inputbox\"\n      />\n\n      <Label name=\"Pipeline\" />\n      <Controller\n        name=\"pipeline\"\n        control={control}\n        render={({ field }) => (\n          <CustomDropdown field={field} option={pipeline} />\n        )}\n      />\n\n      <Label name=\"Ticket Status\" />\n      <Controller\n        name=\"status\"\n        control={control}\n        render={({ field }) => <CustomDropdown field={field} option={ticket} />}\n      />\n\n      <Label name=\"Ticket owner\" />\n      <Controller\n        name=\"ticketOwner\"\n        control={control}\n        render={({ field }) => (\n          <CustomDropdown field={field} option={ticketowner} />\n        )}\n      />\n\n      <Label name=\"Priority\" />\n      <Controller\n        name=\"priority\"\n        control={control}\n        render={({ field }) => (\n          <CustomDropdown field={field} option={priority} />\n        )}\n      />\n\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <Stack spacing={3}>\n          <DesktopDatePicker\n            inputFormat=\"MM/dd/yyyy\"\n            value={value}\n            onChange={handleChange}\n            renderInput={(params) => <TextField {...register(\"date\")} {...params} />}\n          />\n        </Stack>\n      </LocalizationProvider>\n\n      <Stack className=\"stack\" spacing={3} direction=\"row\">\n        <Button variant=\"outlined\" type=\"submit\">\n          Submit\n        </Button>\n        <Button color=\"neutral\" variant=\"contained\">\n          Create and add another\n        </Button>\n        <Button variant=\"outlined\">cancel</Button>\n      </Stack>\n    </form>\n  );\n};\n","import { DataGrid } from \"@mui/x-data-grid\";\nimport \"./DataGridview.scss\";\n\nconst defaultRows = [\n  { id: 1, lastName: \"Riya\", firstName: \"Patel\", source: \"chat\" },\n];\n\nconst columns = [\n  {\n    field: \"ticketname\",\n    headerName: \"Ticket Name\",\n    width: 170,\n    editable: true,\n  },\n  { field: \"pipeline\", headerName: \"Pipeline\", width: 130, editable: true },\n  {\n    field: \"ticketstatus\",\n    headerName: \"Ticket Status\",\n    width: 170,\n    editable: true,\n  },\n  {\n    field: \"ticketdescription\",\n    headerName: \"Ticket Discription\",\n    width: 190,\n    editable: true,\n  },\n  { field: \"source\", headerName: \"Source\", width: 130, editable: true },\n  {\n    field: \"ticketowner\",\n    headerName: \"Ticket Owner\",\n    width: 170,\n    editable: true,\n  },\n  { field: \"priority\", headerName: \"Priority\", width: 130, editable: true },\n  { field: \"date\", headerName: \"Date\", width: 130, editable: true },\n  { field: \"company\", headerName: \"Company\", width: 140, editable: true },\n  { field: \"contact\", headerName: \"Contact\", width: 130, editable: true },\n  {\n    field: \"firstName\",\n    headerName: \"Full name\",\n    width: 160,\n    editable: true,\n  },\n];\n\nexport const DataGridview = ({rowData}) => {\n \n\n  return (\n    <div className=\"data-grid-view\" style={{ height: 600, width: \"90%\" }}>\n        <DataGrid  rows={rowData} columns={columns}/>\n    </div>\n  );\n};","import {useState} from 'react'\nimport { CreateTicket,Check } from '../../Component/CreateTicketForm/CreateTicket'\nimport { DataGridview } from '../../Component/DataGridview/DataGridview'\nimport \"./TicketDashboard.scss\";\nimport Button from \"@mui/material/Button\";\n\nexport const TicketDashboard = () => {\n\n\n    const [ticketsArray, setTicketsArray] = useState([]);\n\n    const setTicketRow = (data)=>{\n        console.log(data);\n\n        setTicketsArray([...ticketsArray,data])\n    }\n\n\n\n    return (\n        <div className=\"ticket-dashboard\">\n        <DataGridview className=\"data-grid\" rowData={ticketsArray} />\n        <CreateTicket setTicketFormData = {setTicketRow} className=\"create-ticket\"/>\n      </div>\n    )\n\n\n    // return (  <Button variant=\"contained\">Contained</Button>)\n}       \n","import React from \"react\";\nimport { Route, Routes,BrowserRouter as Router } from \"react-router-dom\";\nimport TemporaryDrawer from \"../../Component/TemporaryDrawer\";\nimport TopNavBar from \"../../Component/TopNavBar\";\nimport { Home } from \"../Home/Home\";\nimport { TicketDashboard } from \"../TicketDashboard/TicketDashboard\";\n// import \"./dashboard.scss\";\nimport Button from \"@mui/material/Button\";\n\n\nconst SwitchRouter = () => {\n  return (\n    <>\n      <Routes>\n      <Route exact path=\"/\" element={<Home/>} ></Route>\n        <Route exact path=\"/tickets\" element={<TicketDashboard/>} ></Route>\n      </Routes>\n    </>\n  );\n};\n\nexport const Dashboard = () => {\n    \n  return (\n    <Router>\n      <TopNavBar />\n      <TemporaryDrawer />\n      <SwitchRouter/>\n    </Router>\n  );\n};\n","import \"./App.css\";\n// import { Box, ThemeProvider } from '@mui/system';\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Theme } from \"./Container/Theming\";\nimport { Provider } from 'react-redux'\nimport { store } from \"./Redux/Store\";\nimport { Component } from \"react\";\nimport { Dashboard } from \"./Container/Dashboard/Dashboard\";\nimport Button from \"@mui/material/Button\";\nexport default class App extends Component {\n  render() {\n\n    return (\n      <Provider store={store}>\n        <ThemeProvider theme={Theme}>\n          <Dashboard/>\n        </ThemeProvider>\n        \n      </Provider>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}